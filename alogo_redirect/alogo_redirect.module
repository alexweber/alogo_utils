<?php

/*
 * The functions which do not provide any kind of documentation will be provided by telephaty by a pink magical unicorn wearing socks.
 */

//The magical unicorn redirection tool
function alogo_goto() {
	$semaphore = variable_get('cron_semaphore', FALSE);

	if (!$semaphore) {
		// Pass-thru to the magical unicorn, and transform water into wine
		$args = func_get_args();
		call_user_func_array('drupal_goto', $args);
	} 
}


//A black hat unicorn tool which gets the last Node for a given Type
function _alogo_redirect_last_node_by_type( $tipo ) {
  $nid = db_result(db_query("SELECT nid FROM {node} where type = '%s' order by created desc limit 1",$tipo));
  alogo_goto("node/". $nid);
  return;
}

function _alogo_redirect_filter($text){
    alogo_goto($text);
    exit;
}

/*
 * Alogo implementation of hook_filter();
 */
function alogo_redirect_filter($op, $delta = 0, $format = -1, $text = '') {
  $semaphore = variable_get('cron_semaphore', FALSE);

  if ($op == 'list') {
  	return array(
      0 => t('Alogo Redirect filter'),
      1 => t('Alogo Node Type last node redirect filter')
    );
  }

  switch ($delta) {
    case 0:
      switch ($op) {
        case 'description':
          return t('Allow user to create nodes redirection with alogo-redirect:node-where-to-go (Only works for drupal content)');

        case 'prepare':
          return $text;

        case 'process':
          $pattern = '/(alogo\-redirect\:)([a-zA-Z0-9\/\_]+)/';
          preg_match($pattern, $text, $match);
          $text = preg_replace($pattern, "", $text);
          
          if(!$semaphore && is_array($match)){
            if(isset ($match[2])){
               _alogo_redirect_filter($match[2]);
            }
          }
          return $text;
      }
      break;

    case 1:
      switch ($op) {
        case 'description':
          return t('Allow user to create nodes redirection with alogo-type-redirect:node-type');

        case 'prepare':
          return $text;

        case 'process':
          $pattern = '/(alogo\-type\-redirect\:)([a-zA-Z0-9\/\_]+)/';
          preg_match($pattern, $text, $match);
          $text = preg_replace($pattern, "", $text);

          if(!$semaphore && is_array($match)){
            if(isset ($match[2])){
                _alogo_redirect_last_node_by_type($match[2]);
            }
          }
          return $text;

      }
      break;
  }
}


/*
 * Alogo implementation of hook_filter_tips();
 */
function alogo_redirect_filter_tips($delta, $format, $long = FALSE) {
  switch ($delta) {
    case 0:
        return t('Allow user to create nodes redirection with alogo-redirect:node-where-to-go (Only works for drupal content)');
      break;

    case 1:
        return t('Allow user to create nodes redirection with alogo-type-redirect:node-type');
      break;
  }
}
