<?php

/**
 * Convert a string to a slug, safe for use in urls
 * @param string
 * @return string
 */
function alogo_to_slug($string){
	$string = str_replace(array('/', ' ', '&'), '-', $string);
  $accents = '/&([A-Za-z]{1,2})(tilde|grave|acute|circ|cedil|uml|lig);/';
  return urlencode(strtolower(preg_replace($accents, '$1', htmlentities(utf8_decode($string)))));
}

/**
 * Return absolute drupal site root
 * @return string
 */
function alogo_docroot() {
  $absolute_dir = dirname(__FILE__);
  $relative_dir = drupal_get_path('module', 'alogo_utils');
  return substr($absolute_dir, 0, -1 * (1 + strlen($relative_dir)));
}

/**
 * Calculate age from birthday
 * @param string $bday
 *  - birthday (dd-mm-yyyy)
 */
function alogo_get_age($bday){
	list($d, $m, $y) = explode('-', $bday);
	$yd = date('Y') - $y;
	
	if (date('md') < $m.$d){
		--$yd;
	}
	
	return $yd;
}

/**
 * Validação de CPF
 * @param string $cpf
 * @param bool $strict
 * @return bool
 */
function alogo_validate_cpf($cpf, $strict = FALSE) {
  if ($strict === FALSE) {
    $regex = '/^[0-9]{3}(.)?[0-9]{3}(.)?[0-9]{3}(-)?[0-9]{2}$/';
    return (bool) preg_match($regex, $cpf);
  } else {
    $forbidden = array('00000000000', '11111111111', '22222222222', '33333333333', '44444444444', '55555555555', '66666666666', '77777777777', '88888888888', '99999999999');

    // Check if its not a forbidden combination
    if (drupal_strlen($cpf) !== 11 || in_array($cpf, $forbidden)) {
      return FALSE;
    }

    // Check the 11st and 12nd numbers
    for ($numbers = 9; $numbers <= 10; $numbers++) {
      $digit = 0;

      for ($i = 0; $i < $numbers; $i++) {
        $digit += $cpf{$i} * ($numbers + 1 - $i);
      }

      // Calculate the digit and check it
      $digit = 11 - ($digit % 11);

      if ($digit == 10 or $digit == 11) {
        $digit = 0;
      }

      if ($digit != $cpf{$numbers}) {
        return FALSE;
      }
    }
    return TRUE;
  }
}

/**
 * Validação de CNPJ
 * @param string $cnpj
 * @return bool
 */
function alogo_validate_cnpj($cnpj) {
  $forbidden = array('00000000000000', '11111111111111', '22222222222222', '33333333333333', '44444444444444', '55555555555555', '66666666666666', '77777777777777', '88888888888888', '99999999999999');

  // Check if its not a forbidden combination
  if (drupal_strlen($cpf) !== 14 || in_array($cnpj, $forbidden)) {
    return FALSE;
  }
  
  $i = 0;
  while ($i < 14) {
    $cnpj_d[$i] = drupal_substr($cnpj, $i, 1);
    $i++;
  }

  $digit = ($cnpj[0] * 5) + ($cnpj[1] * 4) + ($cnpj[2] * 3) + ($cnpj[3] * 2) +
    ($cnpj[4] * 9) + ($cnpj[5] * 8) + ($cnpj[6] * 7) + ($cnpj[7] * 6) +
    ($cnpj[8] * 5) + ($cnpj[9] * 4) + ($cnpj[10] * 3) + ($cnpj[11] * 2);

  // Calculate the digit and check it
  $digit = 11 - ($digit % 11);
  if ($digit == 10 or $digit == 11) {
    $digit = 0;
  }

  if ($digit != $cnpj{12}) {
    return FALSE;
  }

  $digit = ($cnpj[0] * 6) + ($cnpj[1] * 5) + ($cnpj[2] * 4) +
    ($cnpj[3] * 3) + ($cnpj[4] * 2) + ($cnpj[5] * 9) + ($cnpj[6] * 8) +
    ($cnpj[7] * 7) + ($cnpj[8] * 6) + ($cnpj[9] * 5) + ($cnpj[10] * 4) +
    ($cnpj[11] * 3) + ($digit * 2);

  // Calculate the digit and check it
  $digit = 11 - ($digit % 11);
  if ($digit == 10 or $digit == 11) {
    $digit = 0;
  }

  if ($digit != $cnpj{13}) {
    return FALSE;
  }

  return TRUE;
}

/**
 * Implementation of hook_cron().
 */
function alogo_utils_cron() {
  $resource = db_query("SHOW tables");
  $tables = array();
  
  while($row = db_fetch_array($resource)) {
    $tables[] = current($row);
  }
  
  $query = 'OPTIMIZE TABLE ' . implode(', ', $tables);
  $result = db_query($query);
  
  if($result === false) {
    watchdog('alogo_utils', 'Error Optimizing Database, query: %query', array('%query' => $query), WATCHDOG_ERROR);
  }else{
    watchdog('alogo_utils', 'Optimized Database');
  }
}
